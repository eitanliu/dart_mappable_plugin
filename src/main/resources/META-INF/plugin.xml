<!-- Plugin Configuration File. Read more: https://plugins.jetbrains.com/docs/intellij/plugin-configuration-file.html -->
<idea-plugin>
    <!-- Unique identifier of the plugin. It should be FQN. It cannot be changed between the plugin versions. -->
    <id>com.eitanliu.dart.mappable</id>

    <!-- Public plugin name should be written in Title Case.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-name -->
    <!--max 64 charts-->
    <name>DartMappable(FlutterJsonTo Freezed JsonSerializable Compatible)</name>

    <!-- A displayed Vendor name or Organization ID displayed on the Plugins Page. -->
    <vendor email="eitanliu@gmail.com" url="https://www.eitanliu.com">Eitan Liu</vendor>

    <!-- Description of the plugin displayed on the Plugin Page and IDE Plugin Manager.
         Simple HTML elements (text formatting, paragraphs, and lists) can be added inside of <![CDATA[ ]]> tag.
         Guidelines: https://plugins.jetbrains.com/docs/marketplace/plugin-overview-page.html#plugin-description -->
    <description><![CDATA[
     <br>Json to dart data classes are provided, and dart files ending in entity are provided to generate dart class factory for use.</br>
     <br>Right click on package -> `New` -> `Json To DartMappable`ã€€And Then you will know how to use.</br>
     <br>If you change the fields in the class, right click on package -> `Flutter Command` -> `Flutter Run Build Runner`, shortcut key is changed to Alt + r.</br>
  ]]></description>

    <!-- Product and plugin compatibility requirements.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-compatibility.html -->
    <depends>com.intellij.modules.platform</depends>
    <depends>com.intellij.modules.lang</depends>
    <depends>com.intellij.modules.json</depends>
    <!--<depends>com.intellij.modules.all</depends>-->
    <!--<depends>com.intellij.java</depends>-->
    <!--<depends>org.jetbrains.kotlin</depends>-->
    <depends>Dart</depends>
    <depends>io.flutter</depends>

    <!-- Extension points defined by the plugin.
         Read more: https://plugins.jetbrains.com/docs/intellij/plugin-extension-points.html -->
    <extensions defaultExtensionNs="com.intellij">
        <notificationGroup id="DartMappable Notification Group" displayType="BALLOON"
            bundle="messages.DartMappableBundle" key="name" />

        <applicationConfigurable groupId="tools" displayName="DartMappable Settings"
            id="preferences.SingleFileExecutionConfigurable"
            instance="com.eitanliu.dart.mappable.settings.SettingConfig" />
        <applicationService serviceInterface="com.eitanliu.compat.application.CoroutineSupport"
            serviceImplementation="com.eitanliu.compat.application.impl.PlatformCoroutineSupport" />

        <applicationService serviceImplementation="com.eitanliu.dart.mappable.settings.Settings" />

        <applicationService serviceImplementation="com.eitanliu.dart.mappable.services.ApplicationService" />

        <projectService serviceImplementation="com.eitanliu.dart.mappable.services.ProjectService" />
    </extensions>

    <application-components>
        <!--<component>-->
        <!--    <implementation-class>com.eitanliu.dart.mappable.settings.Settings</implementation-class>-->
        <!--</component>-->
    </application-components>

    <applicationListeners>
        <!--<listener class="com.eitanliu.dart.mappable.listeners.ApplicationListener"-->
        <!--    topic="com.intellij.ide.AppLifecycleListener" />-->
        <!--<listener class="com.eitanliu.dart.mappable.listeners.ProjectListener"-->
        <!--    topic="com.intellij.openapi.project.ProjectManagerListener" />-->
    </applicationListeners>

    <actions>
        <action id="JsonToDartMappable" text="Json To DartMappable" icon="/icon/action.svg"
            class="com.eitanliu.dart.mappable.actions.JsonToDartAction"
            description="Generate dart data class File from JSON">
            <add-to-group group-id="NewGroup" anchor="first" />
        </action>

        <action id="JsonToDartMappable.Generate" text="Json To DartMappable"
            class="com.eitanliu.dart.mappable.actions.JsonToDartAction"
            description="Generate dart data class File from JSON">
            <add-to-group group-id="GenerateGroup" anchor="before" relative-to-action="Generate.Constructor.Dart" />
        </action>

        <action id="PubRunBuildRunnerCommand" text="Flutter Run Build Runner"
            class="com.eitanliu.dart.mappable.actions.FlutterRunBuildRunnerAction"
            description="Run 'flutter pub run build_runner build --delete-conflicting-outputs'">
            <add-to-group group-id="BuildMenu" anchor="first" />
            <keyboard-shortcut keymap="$default" first-keystroke="alt r" />
        </action>

        <group id="FlutterCommandGroup" text="Flutter Command" popup="true" icon="AllIcons.Actions.RunAll">
            <add-to-group group-id="ProjectViewPopupMenu" anchor="after" relative-to-action="WeighingNewGroup" />
            <!--<add-to-group anchor="before" group-id="ProjectViewPopupMenuRunGroup"-->
            <!--    relative-to-action="RunContextPopupGroup" />-->
            <reference ref="PubRunBuildRunnerCommand" />
            <reference ref="flutter.pub.get" />
            <reference ref="flutter.pub.upgrade" />
            <reference ref="flutter.clean" />
            <separator />
            <reference ref="flutter.doctor" />
            <reference ref="flutter.upgrade" />
            <separator />
            <reference ref="flutter.devtools.open" />
            <reference ref="flutter.androidstudio.open" />
            <reference ref="flutter.xcode.open" />
            <reference ref="FlutterBuildActionGroup" />

        </group>
    </actions>
</idea-plugin>
